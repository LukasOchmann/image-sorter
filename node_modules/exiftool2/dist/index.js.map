{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { Writable, Readable } from \"stream\";\nimport { spawn, ChildProcess } from \"child_process\";\nimport { join } from \"path\";\nimport { createWriteStream, unlink } from \"fs\";\nimport { tmpdir } from \"os\";\nimport { promisify } from \"util\";\n\nconst pUnlink = promisify(unlink);\n\n/**\n * Exif data type.\n */\nexport type ExifData = ReadonlyArray<Record<string, any>>;\n\n/**\n * Tooling constants.\n */\nconst BIN_PATH = join(__dirname, \"../vendor/Image-ExifTool-11.84/exiftool\");\nconst DELIMITER = \"\\n}]\\n\";\n\n/**\n * Exec interface for `exiftool`.\n */\nexport class Exec extends Writable {\n  process: ChildProcess;\n  pending: number;\n\n  constructor(args: string[], pending: number) {\n    super();\n\n    this.process = spawn(BIN_PATH, args);\n    this.pending = pending;\n\n    let stdout = \"\";\n    let stderr = \"\";\n\n    this.process.stdout?.on(\"data\", (chunk: Buffer) => {\n      let offset: number;\n\n      stdout += chunk.toString(\"utf8\");\n\n      while ((offset = stdout.indexOf(DELIMITER)) > -1) {\n        const len = offset + DELIMITER.length;\n        const data = stdout.substr(0, len);\n\n        stdout = stdout.substr(len);\n\n        try {\n          this.pending--;\n          this.emit(\"exif\", JSON.parse(data));\n        } catch (err) {\n          this.emit(\"error\", err);\n        }\n      }\n    });\n\n    this.process.stderr?.on(\"data\", (chunk: Buffer) => {\n      let offset: number;\n\n      stderr += chunk.toString(\"utf8\");\n\n      while ((offset = stderr.indexOf(\"\\n\")) > -1) {\n        const data = stderr.substr(0, offset);\n\n        stderr = stderr.substr(offset + 1);\n\n        if (data.length) {\n          this.pending--;\n          this.emit(\"error\", new Error(data));\n        }\n      }\n    });\n\n    this.process.stdout?.on(\"error\", this.emit.bind(this, \"error\"));\n    this.process.stderr?.on(\"error\", this.emit.bind(this, \"error\"));\n\n    this.process.stdin?.on(\"error\", (error: Error) => {\n      const code = (error as any).code;\n\n      if (code !== \"EPIPE\" && code !== \"ECONNRESET\") {\n        this.emit(\"error\", error);\n      }\n    });\n  }\n\n  _write(chunk: Buffer, encoding: string, cb: (error?: Error | null) => void) {\n    if (!this.process.stdin || !this.process.stdin.writable) return cb();\n\n    return this.process.stdin.write(chunk, encoding, err => {\n      if (err && (err as any).code === \"EPIPE\") return cb();\n      return cb(err);\n    });\n  }\n\n  _destroy() {\n    return this.process.kill(\"SIGTERM\");\n  }\n\n  _final() {\n    return this.process.stdin?.end();\n  }\n\n  command(...args: string[]) {\n    for (const arg of args) this.write(`${arg}\\n`);\n  }\n\n  close() {\n    return this.command(\"-stay_open\", \"False\");\n  }\n\n  execute(...args: string[]) {\n    return this.command(...args, \"-q\", \"-json\", \"-execute\");\n  }\n\n  send(...args: string[]): Promise<ExifData> {\n    let remaining = this.pending;\n    this.pending++; // Track pending emit.\n    this.execute(...args); // Send args to `execute`.\n\n    return new Promise((resolve, reject) => {\n      const onexif = (exif: ExifData) => {\n        if (remaining-- > 0) return;\n        removeListeners();\n        return resolve(exif);\n      };\n\n      const onerror = (err: Error) => {\n        if (remaining-- > 0) return;\n        removeListeners();\n        return reject(err);\n      };\n\n      const removeListeners = () => {\n        this.removeListener(\"exif\", onexif);\n        this.removeListener(\"error\", onerror);\n      };\n\n      this.on(\"exif\", onexif);\n      this.on(\"error\", onerror);\n    });\n  }\n\n  read(readable: Readable, ...args: string[]): Promise<ExifData> {\n    const tmpFilename = join(\n      tmpdir(),\n      `exiftool2_${Math.random()\n        .toString(36)\n        .substr(2)}`\n    );\n\n    const dest = readable.pipe(createWriteStream(tmpFilename));\n\n    const cleanup = () => {\n      dest.close(); // Close file stream before unlinking.\n      return pUnlink(tmpFilename);\n    };\n\n    return this.send(tmpFilename, ...args).then(\n      exif => cleanup().then(() => exif),\n      err => cleanup().then(() => Promise.reject(err))\n    );\n  }\n}\n\n/**\n * Handle `-stay_open` arguments.\n */\nexport function open() {\n  return new Exec([\"-stay_open\", \"True\", \"-@\", \"-\"], 0);\n}\n\n/**\n * Execute a command, returning on data.\n */\nexport function exec(...args: string[]) {\n  return new Exec([\"-q\", \"-json\", ...args], 1);\n}\n"]}